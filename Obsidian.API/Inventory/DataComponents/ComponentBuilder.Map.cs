using System.Collections.Immutable;

namespace Obsidian.API.Inventory.DataComponents;
public partial class ComponentBuilder
{
    //TODO SOURCE GENERATE THIS
    internal static ImmutableArray<Func<IDataComponent?>> ComponentsMap { get; } = new List<Func<IDataComponent?>>
    {
        () => CustomData,
        () => MaxStackSize,
        () => MaxDamage,
        () => Damage,
        () => Unbreakable,
        () => CustomName,
        () => ItemName,
        () => ItemModel,
        () => Lore,
        () => Rarity,
        () => Enchantments,
        () => new CanPlaceOnDataComponent(),
        () => new CanBreakDataComponent(),
        () => AttributeModifiers,
        () => CustomModelData,
        //() => HideAdditionalTooltip,
        //() => HideTooltip,
        () => RepairCost,
        () => CreativeSlotLock,
        () => EnchantmentGlintOverride,
        () => IntangibleProjectile,
        () => new FoodDataComponent(),
        () => new ConsumableDataComponent(),
        () => UseRemainder,
        () => new UseCooldownDataComponent(),
        () => DamageResistant,
        () => new ToolDataComponent(),
        () => Enchantable,
        () => new EquippableDataComponent(),
        () => Repairable,
        () => Glider,
        () => TooltipStyle,
        () => DeathProtection,
        () => StoredEnchantments,
        () => DyedColor,
        () => MapColor,
        () => MapId,
        () => new MapDecorationDataComponent(),
        () => MapPostProcessing,
        () => ChargedProjectiles,
        () => BundleContents,
        () => new PotionContentsDataComponent(),
        () => SuspiciousStewEffects,
        () => WritableBookContent,
        () => WrittenBookContent,
        () => new TrimDataComponent(),
        () => DebugStickState,
        () => EntityData,
        () => BucketEntityData,
        () => BlockEntityData,
        () => Instrument,
        () => OminousBottleAmplifier,
        () => new JukeboxPlayableDataComponent(),
        () => Recipes,
        () => new LodestoneTrackerDataComponent(),
        () => FireworkExplosion,
        () => new FireworksDataComponent(),
        () => new ProfileDataComponent(),
        () => NoteBlockSound,
        () => BannerPatterns,
        () => BaseColor,
        () => PotDecorations,
        () => Container,
        () => BlockState,
        () => Bees,
        () => Lock,
        () => ContainerLoot
    }.ToImmutableArray();
}
